{"version":3,"file":"static/js/627.5724226a.chunk.js","mappings":"qJAYKA,EAAsB,SAAtBA,GAAsB,OAAtBA,EAAsB,sBAAtBA,EAAsB,0BAAtBA,EAAsB,sBAAtBA,EAAsB,oBAAtBA,EAAsB,sBAAtBA,EAAsB,gBAAtBA,EAAsB,kBAAtBA,EAAsB,gBAAtBA,EAAsB,gBAAtBA,CAAsB,EAAtBA,GAAsB,IAoD3B,QAlBA,SAA4BC,GAC1B,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,SACEE,QAASC,EAAAA,EACTC,UAAS,OAAAC,OAASN,EAAMO,WAAU,KAAAD,OAChCN,EAAMQ,gBAAkB,cAAgB,IAE1CC,QAAST,EAAMU,eAAeR,SAE7BF,EAAMW,cAIf,C,8GCSA,QAxCA,SAAuBX,GACrB,MAAMY,GAAWC,EAAAA,EAAAA,MAEXC,EAAsC,CAC1CC,MAAO,eACPC,YAAa,+BAUf,OACEf,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKH,UAClBD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0CAAyCH,UACtDe,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,YAAWH,SAAA,EACxBD,EAAAA,EAAAA,KAAA,MAAII,UAAU,aAAYH,SAAC,gBAC3BD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gIAIHD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,2BAA0BH,UACvCD,EAAAA,EAAAA,KAACiB,EAAAA,EAAkB,CACjBP,WAAW,eACXD,eAnBSS,MACnBC,EAAAA,EAAAA,KAAM,MACJC,EAAAA,EAAAA,IAAqBT,GAAUU,EAAAA,EAAAA,IAAkB,SAAU,KAC3DV,GAASW,EAAAA,EAAAA,GAAiBT,GAAkB,GAC5C,EAgBQP,WAAYR,EAAAA,EAAuByB,QACnChB,iBAAiB,YAO/B,C","sources":["components/notification/NotificationButton.tsx","screens/private/screens/dashboard_home/DashboardHome.tsx"],"sourcesContent":["/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nimport { NOTIFICATION_MODAL_ID } from \"./NotificationComponent\";\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Enums for the notification button type.\n */\nenum NotificationButtonType {\n  PRIMARY = \"btn-primary\",\n  SECONDARY = \"btn-secondary\",\n  SUCCESS = \"btn-success\",\n  DANGER = \"btn-danger\",\n  WARNING = \"btn-warning\",\n  INFO = \"btn-info\",\n  LIGHT = \"btn-light\",\n  DARK = \"btn-dark\",\n  LINK = \"btn-link\",\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * The notification button props.\n * @param buttonText The text of the button.\n * @param onClickHandler The on click handler of the button.\n * @param buttonType The button type.\n * @param isButtonOutline The button outline.\n */\ninterface INotificationButtonProps {\n  buttonText: string;\n  onClickHandler: () => void;\n  buttonType?: NotificationButtonType;\n  isButtonOutline?: boolean;\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Notification button component.\n *\n * @param props  The notification button props.\n * @returns The notification button component.\n */\nfunction NotificationButton(props: INotificationButtonProps) {\n  return (\n    <div>\n      <label\n        htmlFor={NOTIFICATION_MODAL_ID}\n        className={`btn ${props.buttonType} ${\n          props.isButtonOutline ? \"btn-outline\" : \"\"\n        }`}\n        onClick={props.onClickHandler}\n      >\n        {props.buttonText}\n      </label>\n    </div>\n  );\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the NotificationButton component.\nexport default NotificationButton;\nexport type { INotificationButtonProps };\nexport { NotificationButtonType };\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file.\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nimport { batch, useDispatch } from \"react-redux\";\nimport { showAlertWithTimeout } from \"../../../../data_store/slice/ToastAlertSlice\";\nimport {\n  NotificationState,\n  showNotification,\n} from \"../../../../data_store/slice/NotificationSlice\";\nimport NotificationButton, {\n  NotificationButtonType,\n} from \"../../../../components/notification/NotificationButton\";\nimport { getErrorAlertData } from \"../../../../provider/alert_toast_provider/AlertToastProvider\";\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Interface definition for the dashboard home props.\n */\ninterface IDashboardHomeProps {}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Component definition for the dashboard home component.\n * @param props The props for the dashboard home component.\n * @returns The dashboard home component.\n */\nfunction DashboardHome(props: IDashboardHomeProps) {\n  const dispatch = useDispatch();\n\n  const notificationData: NotificationState = {\n    title: \"Notification\",\n    description: \"This is a notification data\",\n  };\n\n  const clickHandler = () => {\n    batch(() => {\n      showAlertWithTimeout(dispatch, getErrorAlertData(\"Error\"), 3000);\n      dispatch(showNotification(notificationData));\n    });\n  };\n\n  return (\n    <div className=\"p-2\">\n      <div className=\"card shadow-lg compact side bg-base-100\">\n        <div className=\"card-body\">\n          <h2 className=\"card-title\">Card Title</h2>\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam\n            necessitatibus incidunt ut officiis explicabo inventore.\n          </p>\n          <div className=\"justify-end card-actions\">\n            <NotificationButton\n              buttonText=\"Notification\"\n              onClickHandler={clickHandler}\n              buttonType={NotificationButtonType.SUCCESS}\n              isButtonOutline={true}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the dashboard home component.\nexport default DashboardHome;\nexport type { IDashboardHomeProps };\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file.\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"],"names":["NotificationButtonType","props","_jsx","children","htmlFor","NOTIFICATION_MODAL_ID","className","concat","buttonType","isButtonOutline","onClick","onClickHandler","buttonText","dispatch","useDispatch","notificationData","title","description","_jsxs","NotificationButton","clickHandler","batch","showAlertWithTimeout","getErrorAlertData","showNotification","SUCCESS"],"sourceRoot":""}