{"version":3,"file":"static/js/307.eb7f93d1.chunk.js","mappings":"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","sources":["assets/icons/cred_icon/DeleteIcon.tsx","assets/icons/project_icon/AddIcon.tsx","assets/icons/project_icon/EditIcon.tsx","components/tooltip/TooltipComponent.tsx","assets/icons/project_icon/PreviewIcon.tsx","service/supabase/supastore/projects/actions/ProjectsDataRead.ts","screens/private/screens/projects/ProjectScreen.tsx","service/supabase/supastore/projects/ProjectsStoreApi.ts","util/nav/NavTitle.ts"],"sourcesContent":["//~~~ DeleteIcon ~~~\n// Summary: This file contains the SVG for the delete icon\nexport default function DeleteIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M16.5 4.478v.227a48.816 48.816 0 0 1 3.878.512.75.75 0 1 1-.256 1.478l-.209-.035-1.005 13.07a3 3 0 0 1-2.991 2.77H8.084a3 3 0 0 1-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 0 1-.256-1.478A48.567 48.567 0 0 1 7.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 0 1 3.369 0c1.603.051 2.815 1.387 2.815 2.951Zm-6.136-1.452a51.196 51.196 0 0 1 3.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 0 0-6 0v-.113c0-.794.609-1.428 1.364-1.452Zm-.355 5.945a.75.75 0 1 0-1.5.058l.347 9a.75.75 0 1 0 1.499-.058l-.346-9Zm5.48.058a.75.75 0 1 0-1.498-.058l-.347 9a.75.75 0 0 0 1.5.058l.345-9Z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","//~~~~~~ Add icon ~~~~~~\n// Summary: This file contains the SVG for the add icon\nexport function AddIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 9a.75.75 0 0 0-1.5 0v2.25H9a.75.75 0 0 0 0 1.5h2.25V15a.75.75 0 0 0 1.5 0v-2.25H15a.75.75 0 0 0 0-1.5h-2.25V9Z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","//~~~~~ Edit Icon ~~~~~\n// Summary: This file contains the SVG for the edit icon\nexport default function EditIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path d=\"M21.731 2.269a2.625 2.625 0 0 0-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 0 0 0-3.712ZM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 0 0-1.32 2.214l-.8 2.685a.75.75 0 0 0 .933.933l2.685-.8a5.25 5.25 0 0 0 2.214-1.32l8.4-8.4Z\" />\n      <path d=\"M5.25 5.25a3 3 0 0 0-3 3v10.5a3 3 0 0 0 3 3h10.5a3 3 0 0 0 3-3V13.5a.75.75 0 0 0-1.5 0v5.25a1.5 1.5 0 0 1-1.5 1.5H5.25a1.5 1.5 0 0 1-1.5-1.5V8.25a1.5 1.5 0 0 1 1.5-1.5h5.25a.75.75 0 0 0 0-1.5H5.25Z\" />\n    </svg>\n  );\n}\n","/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n/**\n * Prop types for the tooltip component.\n */\ninterface ITooltipComponentProps {\n  title: string;\n  children: React.ReactNode;\n  position?: \"tooltip-top\" | \"bottom\" | \"left\" | \"tooltip-right\";\n  disable?: boolean;\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Functional component for the tooltip.\n *\n * @param props ITooltipComponentProps\n * @returns JSX.Element\n */\nfunction TooltipComponent(props: ITooltipComponentProps) {\n  const show = props.disable !== null && props.disable === true ? false : true;\n  const position = props.position ? props.position : \"tooltip-top\";\n  return (\n    <div\n      className={`${show ? \" tooltip\" : \"\"} ${position}`}\n      data-tip={props.title}\n    >\n      {props.children}\n    </div>\n  );\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the TooltipComponent.\nexport default TooltipComponent;\nexport type { ITooltipComponentProps };\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file.\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","//~~~~~ Preview Icon ~~~~~\n// Summary: This file contains the SVG for the preview icon\nexport default function PreviewIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.161 2.58a1.875 1.875 0 0 1 1.678 0l4.993 2.498c.106.052.23.052.336 0l3.869-1.935A1.875 1.875 0 0 1 21.75 4.82v12.485c0 .71-.401 1.36-1.037 1.677l-4.875 2.437a1.875 1.875 0 0 1-1.676 0l-4.994-2.497a.375.375 0 0 0-.336 0l-3.868 1.935A1.875 1.875 0 0 1 2.25 19.18V6.695c0-.71.401-1.36 1.036-1.677l4.875-2.437ZM9 6a.75.75 0 0 1 .75.75V15a.75.75 0 0 1-1.5 0V6.75A.75.75 0 0 1 9 6Zm6.75 3a.75.75 0 0 0-1.5 0v8.25a.75.75 0 0 0 1.5 0V9Z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nimport { SupabaseProjectsDB } from \"../../../supabase_main/Supabase\";\nimport { ProjectData, ProjectDataSchema } from \"../ProjectsCollection\";\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Method to get the all project data.\n *\n * @param userId - The user id.\n * @param successCallback - The success callback function.\n * @returns The projects data.\n */\nasync function getAllProjectForMainScreen(\n  userId: string,\n  successCallback: (projects: ProjectData[]) => void\n) {\n  try {\n    const { data, error } = await SupabaseProjectsDB.select(\"*\")\n      .eq(\"user_id\", userId)\n      .order(\"started_on\", { ascending: false });\n    if (data !== null && data.length > 0 && data !== undefined && !error) {\n      const projects = getProjectsDateFromMultipleResponse(data);\n      successCallback(projects);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return [];\n}\n\n/**\n * Method to get the project data.\n *\n * @param projects - The project data.\n * @returns The project data.\n */\nfunction getProjectsDateFromMultipleResponse(\n  projects: ProjectDataSchema[]\n): ProjectData[] {\n  const projectData: ProjectData[] = [];\n  projects.forEach((project) => {\n    projectData.push(getProjectDataFromSingleResponse(project));\n  });\n  return projectData;\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Method to get the single project data.\n *\n * @param projects - The project data.\n * @returns The project data.\n */\nasync function getProjectUsingProjectId(projectId: string) {\n  try {\n    const { data, error } = await SupabaseProjectsDB.select(\"*\")\n      .eq(\"project_id\", projectId)\n      .single();\n    if (data !== null && data.length > 0 && data !== undefined && !error) {\n      const project = getProjectDataFromSingleResponse(data);\n      return project;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Method to get the project data.\n *\n * @param projects - The project data.\n * @returns The project data.\n */\nfunction getProjectDataFromSingleResponse(\n  project: ProjectDataSchema\n): ProjectData {\n  const projectData: ProjectData = {\n    projectId: project.project_id,\n    userId: project.user_id,\n    projectName: project.project_name,\n    projectDesc: project.project_desc,\n    projectIcon: project.project_icon,\n    techUsed: project.tech_used?.data,\n    projectLink: project.project_link,\n    githubLink: project.github_link,\n    hostingerLink: project.hostinger_link,\n    images: project.images?.data,\n    isLive: project.is_live,\n    relatedIdeas: project.related_ideas?.data,\n    startedOn: project.started_on,\n    features: project.features?.data,\n    todos: project.todos?.data,\n    projectCompleted: project.project_completed,\n    backendLink: project.backend_link,\n  };\n\n  return projectData;\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the functions\nexport { getAllProjectForMainScreen, getProjectUsingProjectId };\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file.\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","/**\n * Author: Amit raikwar\n * Last updated: 05 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nimport { NavLink, Outlet, useLocation } from \"react-router-dom\";\nimport TooltipComponent from \"../../../../components/tooltip/TooltipComponent\";\nimport { AddIcon } from \"../../../../assets/icons/project_icon/AddIcon\";\nimport EditIcon from \"../../../../assets/icons/project_icon/EditIcon\";\nimport PreviewIcon from \"../../../../assets/icons/project_icon/PreviewIcon\";\nimport DeleteIcon from \"../../../../assets/icons/cred_icon/DeleteIcon\";\nimport getSubNavTitle from \"../../../../util/nav/NavTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../data_store/Store\";\nimport { useEffect } from \"react\";\nimport { getAllProjects } from \"../../../../service/supabase/supastore/projects/ProjectsStoreApi\";\nimport { addProjects } from \"../../../../data_store/slice/projects/ProjectsSlice\";\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Props for the ProjectsScreen component.\n */\ninterface IProjectsScreenProps {}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Project screen routes.\n */\nconst ProjectRoutes = [\n  { title: \"Project preview\", icon: <PreviewIcon />, path: \"preview\" },\n  { title: \"Add project\", icon: <AddIcon />, path: \"add\" },\n  { title: \"Edit project\", icon: <EditIcon />, path: \"edit\" },\n  { title: \"Delete project\", icon: <DeleteIcon />, path: \"delete\" },\n];\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Component definition for the projects screen component.\n * @param props The props for the projects screen component.\n * @returns The projects screen component.\n */\nfunction ProjectsScreen(props: IProjectsScreenProps) {\n  const dispatch = useDispatch();\n  const currentLocation = useLocation();\n  const userId = useSelector((state: RootState) => state.auth.userData.userId);\n\n  // Making network request to get all projects.\n  useEffect(() => {\n    getAllProjects(userId, (projectsData) =>\n      dispatch(addProjects(projectsData))\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, userId]);\n\n  return (\n    <div className=\"h-full\">\n      <div className=\" m-2 bg-primary-content p-1 drop-shadow-md rounded-lg flex flex-row justify-between items-center\">\n        <div className=\"text-xl font-semibold mx-4\">\n          {getSubNavTitle(currentLocation.pathname)}\n        </div>\n        <div className=\"flex flex-row space-x-2 gap-3\">\n          {ProjectRoutes.map((item, index) => (\n            <TooltipComponent key={index} title={item.title}>\n              <NavLink to={item.path} className=\"btn btn-square btn-outline \">\n                {item.icon}\n              </NavLink>\n            </TooltipComponent>\n          ))}\n        </div>\n      </div>\n      <div className=\"overflow-scroll h-[90%]\">\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the ProjectsScreen component.\nexport default ProjectsScreen;\nexport type { IProjectsScreenProps };\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nimport { ToastAlertData } from \"../../../../provider/alert_toast_provider/AlertToastProvider\";\nimport { ProjectData } from \"./ProjectsCollection\";\nimport {\n  getAllProjectForMainScreen,\n  getProjectUsingProjectId,\n} from \"./actions/ProjectsDataRead\";\nimport { insertOrUpdateProject } from \"./actions/ProjectsDataWrite\";\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Method to get the project data.\n *\n * @param projects - The project data.\n * @returns The project data.\n */\nfunction getSingleProject(projectId: string) {\n  return getProjectUsingProjectId(projectId);\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Method to get the all associated project data.\n *\n * @param userId - The user id.\n * @param successCallback - The success callback function.\n * @returns The project data.\n */\nfunction getAllProjects(\n  userId: string,\n  successCallback: (projects: ProjectData[]) => void\n) {\n  return getAllProjectForMainScreen(userId, successCallback);\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Method to add the new project data.\n *\n * @param projectData - The project data.\n * @param showAlertHandler - The notification function.\n */\nfunction addNewProject(\n  projectData: ProjectData,\n  showAlertHandler: (toastAlertData: ToastAlertData) => void\n) {\n  insertOrUpdateProject(projectData, showAlertHandler);\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Method to update the existing project data.\n *\n * @param projectData - The project data.\n * @param showAlertHandler - The notification function.\n */\nfunction updateExistingProject(\n  projectData: ProjectData,\n  showAlertHandler: (toastAlertData: ToastAlertData) => void\n) {\n  insertOrUpdateProject(projectData, showAlertHandler);\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the functions.\nexport {\n  getSingleProject,\n  getAllProjects,\n  addNewProject,\n  updateExistingProject,\n};\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file.\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n/**\n * Get the title of the sub navigation bar.\n *\n * @param pathName path name of the current page.\n */\nfunction getSubNavTitle(pathName: string): string[] {\n  return pathName.split(\"/\").map((item, index) => {\n    if (index === 0) return \"\";\n    if (index === pathName.split(\"/\").length - 1) return item.toUpperCase();\n    return item.toUpperCase() + \" > \";\n  });\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the function\nexport default getSubNavTitle;\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file.\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"],"names":["DeleteIcon","_jsx","xmlns","viewBox","fill","className","children","fillRule","d","clipRule","AddIcon","EditIcon","_jsxs","props","show","disable","position","concat","title","PreviewIcon","async","getAllProjectForMainScreen","userId","successCallback","data","error","SupabaseProjectsDB","select","eq","order","ascending","length","undefined","projects","projectData","forEach","project","push","getProjectDataFromSingleResponse","getProjectsDateFromMultipleResponse","console","log","_project$tech_used","_project$images","_project$related_idea","_project$features","_project$todos","projectId","project_id","user_id","projectName","project_name","projectDesc","project_desc","projectIcon","project_icon","techUsed","tech_used","projectLink","project_link","githubLink","github_link","hostingerLink","hostinger_link","images","isLive","is_live","relatedIdeas","related_ideas","startedOn","started_on","features","todos","projectCompleted","project_completed","backendLink","backend_link","ProjectRoutes","icon","path","dispatch","useDispatch","currentLocation","useLocation","useSelector","state","auth","userData","useEffect","getAllProjects","projectsData","addProjects","getSubNavTitle","pathname","map","item","index","TooltipComponent","NavLink","to","Outlet","pathName","split","toUpperCase"],"sourceRoot":""}