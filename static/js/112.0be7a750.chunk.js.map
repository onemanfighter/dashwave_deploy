{"version":3,"file":"static/js/112.0be7a750.chunk.js","mappings":"mIAEO,SAASA,IACd,OACEC,EAAAA,EAAAA,KAAA,OACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eACLC,UAAU,UAASC,UAEnBL,EAAAA,EAAAA,KAAA,QACEM,SAAS,UACTC,EAAE,6QACFC,SAAS,aAIjB,C,+CCfO,SAASC,IACd,OACET,EAAAA,EAAAA,KAAA,OACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eACLC,UAAU,UAASC,UAEnBL,EAAAA,EAAAA,KAAA,QACEM,SAAS,UACTC,EAAE,sWACFC,SAAS,aAIjB,C,+CCfO,SAASE,IACd,OACEC,EAAAA,EAAAA,MAAA,OACEV,MAAM,6BACNC,QAAQ,YACRC,KAAK,eACLC,UAAU,UAASC,SAAA,EAEnBL,EAAAA,EAAAA,KAAA,QACEM,SAAS,UACTC,EAAE,ybACFC,SAAS,aAEXR,EAAAA,EAAAA,KAAA,QAAMO,EAAE,uLACRP,EAAAA,EAAAA,KAAA,QACEM,SAAS,UACTC,EAAE,0QACFC,SAAS,cAIjB,C,+CCeA,QAfA,SAA0BI,GACxB,MAAMC,EAAyB,OAAlBD,EAAME,UAAsC,IAAlBF,EAAME,QACvCC,EAAWH,EAAMG,SAAWH,EAAMG,SAAW,cACnD,OACEf,EAAAA,EAAAA,KAAA,OACEI,UAAS,GAAAY,OAAKH,EAAO,WAAa,GAAE,KAAAG,OAAID,GACxC,WAAUH,EAAMK,MAAMZ,SAErBO,EAAMP,UAGb,C,iICXA,MAAMa,EAAgB,CACpB,CAAED,MAAO,kBAAmBE,MAAMnB,EAAAA,EAAAA,KAACS,EAAAA,EAAW,IAAKW,KAAM,WACzD,CAAEH,MAAO,iBAAkBE,MAAMnB,EAAAA,EAAAA,KAACD,EAAAA,EAAiB,IAAKqB,KAAM,SAC9D,CAAEH,MAAO,kBAAmBE,MAAMnB,EAAAA,EAAAA,KAACU,EAAAA,EAAW,IAAKU,KAAM,aAoC3D,QA3BA,SAA2BR,GACzB,MAAMS,GAAkBC,EAAAA,EAAAA,MACxB,OACEX,EAAAA,EAAAA,MAAA,OAAKP,UAAU,SAAQC,SAAA,EACrBM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,mGAAkGC,SAAA,EAC/GL,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BC,UACxCkB,EAAAA,EAAAA,GAAeF,EAAgBG,aAElCxB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gCAA+BC,SAC3Ca,EAAcO,KAAI,CAACC,EAAMC,KACxB3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAgB,CAAaX,MAAOS,EAAKT,MAAMZ,UAC9CL,EAAAA,EAAAA,KAAC6B,EAAAA,GAAO,CAACC,GAAIJ,EAAKN,KAAMhB,UAAU,8BAA6BC,SAC5DqB,EAAKP,QAFaQ,WAQ7B3B,EAAAA,EAAAA,KAAA,OAAKI,UAAU,0BAAyBC,UACtCL,EAAAA,EAAAA,KAAC+B,EAAAA,GAAM,QAIf,C,iCCrCA,QAVA,SAAwBC,GACtB,OAAOA,EAASC,MAAM,KAAKR,KAAI,CAACC,EAAMC,IACtB,IAAVA,EAAoB,GACpBA,IAAUK,EAASC,MAAM,KAAKC,OAAS,EAAUR,EAAKS,cACnDT,EAAKS,cAAgB,OAEhC,C","sources":["assets/icons/profile_icon/PasswordResetIcon.tsx","assets/icons/profile_icon/ProfileIcon.tsx","assets/icons/profile_icon/SettingsIcon.tsx","components/tooltip/TooltipComponent.tsx","screens/private/screens/profile/ProfileMainScreen.tsx","util/nav/NavTitle.ts"],"sourcesContent":["//~~~~~~ PasswordResetIcon icon ~~~~~~~\n// Summary: This file contains the SVG for the password reset icon\nexport function PasswordResetIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2.25 6a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V6Zm3.97.97a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 0 1-1.06-1.06l1.72-1.72-1.72-1.72a.75.75 0 0 1 0-1.06Zm4.28 4.28a.75.75 0 0 0 0 1.5h3a.75.75 0 0 0 0-1.5h-3Z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","//~~~~~~~ Profile Icon ~~~~~~~\n// Summary: This file contains the SVG for the profile icon\nexport function ProfileIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M18.685 19.097A9.723 9.723 0 0 0 21.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 0 0 3.065 7.097A9.716 9.716 0 0 0 12 21.75a9.716 9.716 0 0 0 6.685-2.653Zm-12.54-1.285A7.486 7.486 0 0 1 12 15a7.486 7.486 0 0 1 5.855 2.812A8.224 8.224 0 0 1 12 20.25a8.224 8.224 0 0 1-5.855-2.438ZM15.75 9a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","//~~~~~~~ Settings icon ~~~~~~~\n// Summary: This file contains the SVG for the settings icon\nexport function SettingIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      className=\"w-6 h-6\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M12 6.75a5.25 5.25 0 0 1 6.775-5.025.75.75 0 0 1 .313 1.248l-3.32 3.319c.063.475.276.934.641 1.299.365.365.824.578 1.3.64l3.318-3.319a.75.75 0 0 1 1.248.313 5.25 5.25 0 0 1-5.472 6.756c-1.018-.086-1.87.1-2.309.634L7.344 21.3A3.298 3.298 0 1 1 2.7 16.657l8.684-7.151c.533-.44.72-1.291.634-2.309A5.342 5.342 0 0 1 12 6.75ZM4.117 19.125a.75.75 0 0 1 .75-.75h.008a.75.75 0 0 1 .75.75v.008a.75.75 0 0 1-.75.75h-.008a.75.75 0 0 1-.75-.75v-.008Z\"\n        clipRule=\"evenodd\"\n      />\n      <path d=\"m10.076 8.64-2.201-2.2V4.874a.75.75 0 0 0-.364-.643l-3.75-2.25a.75.75 0 0 0-.916.113l-.75.75a.75.75 0 0 0-.113.916l2.25 3.75a.75.75 0 0 0 .643.364h1.564l2.062 2.062 1.575-1.297Z\" />\n      <path\n        fillRule=\"evenodd\"\n        d=\"m12.556 17.329 4.183 4.182a3.375 3.375 0 0 0 4.773-4.773l-3.306-3.305a6.803 6.803 0 0 1-1.53.043c-.394-.034-.682-.006-.867.042a.589.589 0 0 0-.167.063l-3.086 3.748Zm3.414-1.36a.75.75 0 0 1 1.06 0l1.875 1.876a.75.75 0 1 1-1.06 1.06L15.97 17.03a.75.75 0 0 1 0-1.06Z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n/**\n * Prop types for the tooltip component.\n */\ninterface ITooltipComponentProps {\n  title: string;\n  children: React.ReactNode;\n  position?: \"tooltip-top\" | \"bottom\" | \"left\" | \"tooltip-right\";\n  disable?: boolean;\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Functional component for the tooltip.\n *\n * @param props ITooltipComponentProps\n * @returns JSX.Element\n */\nfunction TooltipComponent(props: ITooltipComponentProps) {\n  const show = props.disable !== null && props.disable === true ? false : true;\n  const position = props.position ? props.position : \"tooltip-top\";\n  return (\n    <div\n      className={`${show ? \" tooltip\" : \"\"} ${position}`}\n      data-tip={props.title}\n    >\n      {props.children}\n    </div>\n  );\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the TooltipComponent.\nexport default TooltipComponent;\nexport type { ITooltipComponentProps };\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file.\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nimport { NavLink, Outlet, useLocation } from \"react-router-dom\";\nimport { SettingIcon } from \"../../../../assets/icons/profile_icon/SettingsIcon\";\nimport { ProfileIcon } from \"../../../../assets/icons/profile_icon/ProfileIcon\";\nimport { PasswordResetIcon } from \"../../../../assets/icons/profile_icon/PasswordResetIcon\";\nimport TooltipComponent from \"../../../../components/tooltip/TooltipComponent\";\nimport getSubNavTitle from \"../../../../util/nav/NavTitle\";\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Props for the ProfileMainScreen component.\n */\ninterface IProfileMainScreenProps {}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Profile screen routes.\n */\nconst ProfileRoutes = [\n  { title: \"Profile preview\", icon: <ProfileIcon />, path: \"preview\" },\n  { title: \"Reset password\", icon: <PasswordResetIcon />, path: \"reset\" },\n  { title: \"Profile setting\", icon: <SettingIcon />, path: \"settings\" },\n];\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/**\n * Component definition for the profile screen component.\n * @param props The props for the profile screen component.\n * @returns The profile screen component.\n */\nfunction ProfileMainScreen(props: IProfileMainScreenProps) {\n  const currentLocation = useLocation();\n  return (\n    <div className=\"h-full\">\n      <div className=\" m-2 bg-primary-content p-1 drop-shadow-md rounded-lg flex flex-row justify-between items-center\">\n        <div className=\"text-xl font-semibold mx-4\">\n          {getSubNavTitle(currentLocation.pathname)}\n        </div>\n        <div className=\"flex flex-row space-x-2 gap-3\">\n          {ProfileRoutes.map((item, index) => (\n            <TooltipComponent key={index} title={item.title}>\n              <NavLink to={item.path} className=\"btn btn-square btn-outline \">\n                {item.icon}\n              </NavLink>\n            </TooltipComponent>\n          ))}\n        </div>\n      </div>\n      <div className=\"overflow-scroll h-[90%]\">\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the profile screen component.\nexport default ProfileMainScreen;\nexport type { IProfileMainScreenProps };\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","/**\n * Author: Amit raikwar\n * Last updated: 04 Feb, 2024\n */\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n/**\n * Get the title of the sub navigation bar.\n *\n * @param pathName path name of the current page.\n */\nfunction getSubNavTitle(pathName: string): string[] {\n  return pathName.split(\"/\").map((item, index) => {\n    if (index === 0) return \"\";\n    if (index === pathName.split(\"/\").length - 1) return item.toUpperCase();\n    return item.toUpperCase() + \" > \";\n  });\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// Export the function\nexport default getSubNavTitle;\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// End of file.\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"],"names":["PasswordResetIcon","_jsx","xmlns","viewBox","fill","className","children","fillRule","d","clipRule","ProfileIcon","SettingIcon","_jsxs","props","show","disable","position","concat","title","ProfileRoutes","icon","path","currentLocation","useLocation","getSubNavTitle","pathname","map","item","index","TooltipComponent","NavLink","to","Outlet","pathName","split","length","toUpperCase"],"sourceRoot":""}